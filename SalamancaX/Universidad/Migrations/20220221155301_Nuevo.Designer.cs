// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Universidad.Modelos;

namespace Universidad.Migrations
{
    [DbContext(typeof(UniversidadContext))]
    [Migration("20220221155301_Nuevo")]
    partial class Nuevo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsignaturaCarrera", b =>
                {
                    b.Property<int>("AsignaturasId")
                        .HasColumnType("int");

                    b.Property<int>("CarrerasId")
                        .HasColumnType("int");

                    b.HasKey("AsignaturasId", "CarrerasId");

                    b.HasIndex("CarrerasId");

                    b.ToTable("AsignaturaCarrera");
                });

            modelBuilder.Entity("EstudianteSeccion", b =>
                {
                    b.Property<string>("EstudiantesCedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SeccionesId")
                        .HasColumnType("int");

                    b.HasKey("EstudiantesCedula", "SeccionesId");

                    b.HasIndex("SeccionesId");

                    b.ToTable("EstudianteSeccion");
                });

            modelBuilder.Entity("Universidad.Modelos.Asignatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Horas_practica")
                        .HasColumnType("int");

                    b.Property<int>("Horas_teoria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semestre")
                        .HasColumnType("int");

                    b.Property<int>("Unidades_credito")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Asignaturas");
                });

            modelBuilder.Entity("Universidad.Modelos.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil_profesional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("Universidad.Modelos.Estudiante", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CarreraId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("Fecha_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cedula");

                    b.HasIndex("CarreraId");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Universidad.Modelos.Seccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AsignaturaId")
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AsignaturaId");

                    b.ToTable("Secciones");
                });

            modelBuilder.Entity("AsignaturaCarrera", b =>
                {
                    b.HasOne("Universidad.Modelos.Asignatura", null)
                        .WithMany()
                        .HasForeignKey("AsignaturasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Universidad.Modelos.Carrera", null)
                        .WithMany()
                        .HasForeignKey("CarrerasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EstudianteSeccion", b =>
                {
                    b.HasOne("Universidad.Modelos.Estudiante", null)
                        .WithMany()
                        .HasForeignKey("EstudiantesCedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Universidad.Modelos.Seccion", null)
                        .WithMany()
                        .HasForeignKey("SeccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Universidad.Modelos.Estudiante", b =>
                {
                    b.HasOne("Universidad.Modelos.Carrera", "Carrera")
                        .WithMany("Estudiantes")
                        .HasForeignKey("CarreraId");

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("Universidad.Modelos.Seccion", b =>
                {
                    b.HasOne("Universidad.Modelos.Asignatura", "Asignatura")
                        .WithMany("Secciones")
                        .HasForeignKey("AsignaturaId");

                    b.Navigation("Asignatura");
                });

            modelBuilder.Entity("Universidad.Modelos.Asignatura", b =>
                {
                    b.Navigation("Secciones");
                });

            modelBuilder.Entity("Universidad.Modelos.Carrera", b =>
                {
                    b.Navigation("Estudiantes");
                });
#pragma warning restore 612, 618
        }
    }
}
